	.file	"testcalc.c"
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"x=%d, y=%d, z=%d, result=%d\n"
	.text
.globl main
	.type	main, @function
main:
	leal	4(%esp), %ecx
	andl	$-16, %esp
	pushl	-4(%ecx)
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ecx
	subl	$36, %esp	.stack pointer lowered by 36, giving room on the stack for 9 words
	movl	$11, 8(%esp)	.move 11 onto the stack as the third word
	movl	$6, 4(%esp)	.move 6 onto the stack as the second word
	movl	$2, (%esp)	.move 2 onto the stack as the first word
	call	calc		.call calc
	movl	%eax, 20(%esp)	.move the return value of calc onto the stack as the sixth word
	movl	$11, 16(%esp)	.move 11 into the z variable for calc
	movl	$6, 12(%esp)	.move 6 into the y variable for calc
	movl	$2, 8(%esp)	.move 2 into the x variable for calc
	movl	$.LC0, 4(%esp)	.format specifier is moved into the second parameter of printf
	movl	$1, (%esp)	.1 is moved into the first parameter of printf
	call	__printf_chk	.call printf
	addl	$36, %esp	.restore stack to original size
	popl	%ecx		.pop %ecx off of the stack
	popl	%ebp		.pop %ebp off of the stack
	leal	-4(%ecx), %esp
	ret
	.size	main, .-main
	.ident	"GCC: (Ubuntu 4.3.3-5ubuntu4) 4.3.3"
	.section	.note.GNU-stack,"",@progbits
